// <auto-generated />
using System;
using LibraryCoreProject.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryCoreProject.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryCoreProject.Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("LibraryId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<bool>("StillLive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LastName");

                    b.HasIndex("LibraryId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 81,
                            FirstName = "John Ronald Reuel",
                            LastName = "Tolkien",
                            LibraryId = 1,
                            Rate = 5,
                            StillLive = false
                        },
                        new
                        {
                            Id = 2,
                            Age = 73,
                            FirstName = "Stephen Edwin",
                            LastName = "King",
                            LibraryId = 1,
                            Rate = 4,
                            StillLive = true
                        },
                        new
                        {
                            Id = 3,
                            Age = 57,
                            FirstName = "Adam",
                            LastName = "Mickiewicz",
                            LibraryId = 1,
                            Rate = 6,
                            StillLive = false
                        });
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BookCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookImageId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfRental")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int?>("LibraryId")
                        .HasColumnType("int");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.HasIndex("UserId");

                    b.HasIndex("AuthorId", "Title");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            BookCode = "GHJ-4578",
                            BookImageId = 1,
                            Category = 1,
                            IsAvailable = true,
                            LibraryId = 1,
                            Pages = 320,
                            Rate = 5,
                            Title = "Hobbit"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            BookCode = "GHJ-4578",
                            BookImageId = 2,
                            Category = 1,
                            IsAvailable = true,
                            LibraryId = 1,
                            Pages = 504,
                            Rate = 6,
                            Title = "Władca Pierścieni"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            BookCode = "CDJ-9338",
                            BookImageId = 3,
                            Category = 1,
                            IsAvailable = true,
                            LibraryId = 1,
                            Pages = 416,
                            Rate = 6,
                            Title = "Zielona Mila"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            BookCode = "978-AABC",
                            BookImageId = 4,
                            Category = 2,
                            IsAvailable = true,
                            LibraryId = 1,
                            Pages = 520,
                            Rate = 5,
                            Title = "Lśnienie"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            BookCode = "ZXY-Z570",
                            BookImageId = 5,
                            Category = 5,
                            IsAvailable = true,
                            LibraryId = 1,
                            Pages = 304,
                            Rate = 5,
                            Title = "Pan Taduesz"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            BookCode = "845-9657",
                            BookImageId = 6,
                            Category = 5,
                            IsAvailable = true,
                            LibraryId = 1,
                            Pages = 32,
                            Rate = 4,
                            Title = "Sonety Krymskie"
                        });
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.BookImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("BookImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            ImageUrl = "assets/images/hobbit.png",
                            Name = "Hobbit"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            ImageUrl = "assets/images/the-lord-of-rings.png",
                            Name = "The Lord of Rings"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            ImageUrl = "assets/images/the-green-mile.png",
                            Name = "The Green Mile"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            ImageUrl = "assets/images/the-shining.png",
                            Name = "The Shining"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            ImageUrl = "assets/images/pan-tadeusz.png",
                            Name = "Pan Taduesz"
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            ImageUrl = "assets/images/sonety-krymskie.png",
                            Name = "Sonety Krymskie"
                        });
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Krakowska Biblioteka Publiczna"
                        });
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LibraryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Damian",
                            LastName = "Wójcik",
                            LibraryId = 1
                        });
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.Author", b =>
                {
                    b.HasOne("LibraryCoreProject.Data.Models.Library", "Library")
                        .WithMany("Authors")
                        .HasForeignKey("LibraryId");
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.Book", b =>
                {
                    b.HasOne("LibraryCoreProject.Data.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryCoreProject.Data.Models.Library", "Library")
                        .WithMany("Books")
                        .HasForeignKey("LibraryId");

                    b.HasOne("LibraryCoreProject.Data.Models.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.BookImage", b =>
                {
                    b.HasOne("LibraryCoreProject.Data.Models.Book", "Book")
                        .WithOne("BookImage")
                        .HasForeignKey("LibraryCoreProject.Data.Models.BookImage", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryCoreProject.Data.Models.User", b =>
                {
                    b.HasOne("LibraryCoreProject.Data.Models.Library", "Library")
                        .WithMany("Users")
                        .HasForeignKey("LibraryId");
                });
#pragma warning restore 612, 618
        }
    }
}
