@model Task<List<LibraryCoreProject.Core.Dtos.BookDto>>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
<div>
    <table class="table table-bordered table-responsive-lg table-hover">
        <thead>
            <tr>
                <td>Author</td>
                <td>Title</td>
                <td>Category</td>
                <td>Rate</td>
                <td>Pages</td>
                <td>Available</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Result)
            {
                <tr>
                    <td>@item.Author.FirstName @item.Author.LastName</td>
                    <td>@item.Title</td>
                    <td>@item.Category</td>
                    <td>@item.Rate</td>
                    <td>@item.Pages</td>
                    <td>@item.IsAvailable</td>
                    <td>
                        <a asp-action="Details" asp-route-bookId="@item.GUID.ToString()">Details</a>
                        <a asp-action="Edit" asp-route-bookId="@item.GUID.ToString()">Edit</a>
                        <a asp-action="Delete" asp-route-bookId="@item.GUID.ToString()">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />
<div>
    <table class="table table-bordered table-responsive-lg table-hover" id="apiBooks">
    </table>
</div>


@section Scripts{
    <script>
        $(function () {
            $.ajax("/api/LibraryApi/",
                { method: "get" })
                .then(function (response) {
                    console.log(response);
                    $("#apiBooks").dataTable({
                        data: response,
                        columns: [
                            { "data": "author.firstName"},
                            { "data": "title"},
                            { "data": "category"},
                            { "data": "rate"},
                            { "data": "pages"},
                            { "data": "isAvailable" },
                            {
                                mRender: function (data, type, row) {
                                    var linkEdit = '@Html.ActionLink("Edit", "Edit", "LibraryApi", new { guid = -1 })';
                                    console.log(row.guid);
                                    linkEdit = linkEdit.replace("-1", row.guid);

                                    var linkDetails = '@Html.ActionLink("Details", "Get", "LibraryApi", new { guid = -1 })';
                                    linkDetails = linkDetails.replace("-1", row.guid);

                                    var linkDelete = '@Html.ActionLink("Delete", "Delete", new { guid = -1 })';
                                    linkDelete = linkDelete.replace("-1", row.guid);

                                    return linkDetails + " | " + linkEdit + " | " + linkDelete;
                                }
                            }
                        ]
                    });
                });
        });
    </script>
}
